CHICKEN benchmarks

The benchmark programs have been taken from CHICKEN version 4.2.0.  A
simpler runner (run.scm) has been implemented.

  $ ./run.scm -h
  Usage: run.scm [ config file ]

The configuration file (optional) is a scheme file which can set the
following parameters:

* programs-dir: directory where programs to be benchmarked can be
    found (default = "progs")

* repetitions: number of times each benchmark program is executed
    (default = 3)

* installation-prefix: the CHICKEN installation prefix (default =
  prefix of the running chicken)

* csc-options: options to be passed to csc

* log-file: a sexpr-formatted log file where results are written
    (default = benchmark.log)

* debug?: shows the executed shell commands

* programs: a list of symbols or #f.  If it is a list of symbols, the
    symbols indicate what programs are to be run.  #f indicates all
    programs (default = all programs)

* skip-programs: a list of symbols indicating what programs are not to
    be run (default = '())


If the configuration file is not provided, run.scm will pick the
CHICKEN tools from $PATH.


Configuration file example:

  $ cat 4.7.0.conf
  (csc-options "-O3")


compare.scm can be used to display log results in a readable format.
Example:

  $ ./compare.scm 4.7.0.log 4.7.4.log
  +---[1]:
  |-> installation-prefix: /usr/local/chicken-4.7.0
  |-> csc-options: -O3
  |-> repetitions: 10

  +---[2]:
  |-> installation-prefix: /usr/local/chicken-4.7.4
  |-> csc-options: -O3
  |-> repetitions: 10

  Displaying normalized results (larger numbers indicate better results)

  Programs                   [1]       [2]
  ========================================
  0_________________________1.00______1.00
  binarytrees_______________1.00______1.78
  boyer_____________________1.00______1.02
  browse____________________1.00______1.02
  conform___________________1.01______1.00
  cpstak____________________1.00______1.01
  ctak______________________1.00______1.02
  dderiv____________________1.07______1.00
  deriv_____________________1.05______1.00
  destructive_______________1.03______1.00
  div-iter__________________1.00______1.62
  div-rec___________________1.00______1.10
  dynamic___________________1.00______1.20
  earley____________________1.00______1.19
  fft_______________________1.00______1.02
  fib_______________________1.00______1.00
  fibc______________________1.00______1.02
  fprint____________________1.04______1.00
  fread_____________________1.00______1.36
  graphs____________________1.00______1.09
  hanoi_____________________1.00______1.00
  kanren____________________1.00______1.07
  lattice___________________1.00______1.13
  maze______________________1.00______1.08
  mazefun___________________FAIL______1.00
  nbody_____________________1.00______1.07
  nboyer____________________1.00______1.24
  nestedloop________________1.00______1.03
  nfa_______________________1.00______1.27
  nqueens___________________1.00______1.10
  nucleic2__________________1.00______1.15
  paraffins_________________1.01______1.00
  peval_____________________1.00______1.09
  psyntax___________________1.00______1.12
  puzzle____________________1.00______1.04
  sboyer____________________1.00______1.21
  scheme____________________1.00______1.18
  slatex____________________1.06______1.00
  sort1_____________________1.00______1.11
  tak_______________________1.00______1.05
  takl______________________1.00______1.18
  takr______________________1.00______1.01
  traverse__________________1.00______1.10
  travinit__________________1.00______1.05
  triangl___________________1.00______1.04
